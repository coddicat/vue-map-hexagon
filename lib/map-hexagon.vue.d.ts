import { Vue } from "vue-property-decorator";
import { HexagonCell, HexagonCellData } from "./types";
import { PinchScrollZoomEmitData } from "@coddicat/vue-pinch-scroll-zoom";
export default class MapHexagon extends Vue {
    private cells;
    private width;
    private height;
    private xRange;
    private yRange;
    private itemSize;
    private itemsGap;
    private within;
    private zoom;
    private minScale;
    private maxScale;
    private center;
    private scale;
    private autoCenter;
    private draggable;
    private scrollZoomThrottleDelay;
    private renderThrottleDelay;
    private currentScale;
    private visibleLeft;
    private visibleTop;
    private visibleRight;
    private visibleBottom;
    private draggingListener;
    private scalingListener;
    private setVisibles;
    mounted(): void;
    centerChanged(): void;
    heightChanged(): void;
    widthChanged(): void;
    get mapStyles(): object;
    get radius(): number;
    get xfactor(): number;
    get yfactor(): number;
    get xOffset(): number;
    get contentWidth(): number;
    get yOffset(): number;
    get contentHeight(): number;
    get _cells(): Array<HexagonCell | HexagonCellData>;
    get _minScale(): number;
    get _maxScale(): number;
    onDragging(event: PinchScrollZoomEmitData): void;
    doSetVisibles(floatLeft: number, floatRight: number, floatTop: number, floatBottom: number): void;
    onScaling(event: PinchScrollZoomEmitData): void;
    submitCenter(): void;
    submitSize(): void;
    submitScale(): void;
    getXcenter(): number;
    getYcenter(): number;
    getXposition(col: number): number;
    getYposition(col: number, row: number): number;
    getPositionStyles(col: number, row: number): object;
}
